<?php

namespace app\models;

use libs\Cache;
use libs\GiantBomb;

/**
 * Game model.
 *
 * Initialy generated by gii.
 *
 * @author Muhammad Febriansyah <hifebriansyah@gmail.com>
 *
 * @since Class available since Release 1.0.0
 */
class Game extends MainModel
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'games';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title', 'content', 'release_year', 'platform', 'source_url', 'image_url'], 'required'],
            [['created_at', 'updated_at'], 'safe'],
            [['status_id'], 'integer'],
            [['title', 'content'], 'string', 'max' => 80],
            [['release_year'], 'string', 'max' => 4],
            [['platform', 'source_url', 'image_url'], 'string', 'max' => 255],
        ];
    }

    /**
     * Fetch all available data.
     *
     * If exist get from cache,
     * if no get from api,
     * save to db,
     * then cache it.
     *
     * @return array
     *
     * @since Method available since Release 1.0.0
     */
    public static function fetchByTitle($title)
    {
        if (!Cache::redis()->exists(self::tableName().':'.$title)) {
            $response = GiantBomb::scrapGamesByTitle($title);

            if ($response['status'] == self::SUCCESS) {
                Cache::setArray(self::tableName().':'.$title, $response['data']);
            }
        } else {
            $response['data'] = Cache::getArray(self::tableName().':'.$title);
        }

        return $response;
    }
}
