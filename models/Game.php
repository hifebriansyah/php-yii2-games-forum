<?php

/**
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace app\models;

use libs\Cache;
use libs\GiantBomb;

/**
 * Game model.
 *
 * Initialy generated by gii.
 *
 * @author Muhammad Febriansyah <hifebriansyah@gmail.com>
 *
 * @since Class available since Release 1.0.0
 */
class Game extends MainModel
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'games';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title', 'content', 'release_year', 'platform', 'source_url', 'image_url'], 'required'],
            [['created_at', 'updated_at'], 'safe'],
            [['status_id'], 'integer'],
            [['title', 'content'], 'string', 'max' => 80],
            [['release_year'], 'string', 'max' => 4],
            [['platform', 'source_url', 'image_url'], 'string', 'max' => 255],
        ];
    }

    /**
     * Fetch all available data.
     *
     * If exist get from cache,
     * if no get from api,
     * save to db,
     * then cache it.
     *
     * @return array
     *
     * @since Method available since Release 1.0.0
     */
    public static function fetchByTitle($title)
    {
        if (!Cache::redis()->exists(self::tableName().':'.$title)) {
            $response = GiantBomb::scrapGamesByTitle($title);

            if ($response['status'] == GiantBomb::SUCCESS) {
                Cache::setArray(self::tableName().':'.$title, $response);
                Cache::redis()->expire(self::tableName().':popular', Cache::ONE_DAY);
            }
        } else {
            $response = Cache::getArray(self::tableName().':'.$title);
        }

        return $response;
    }

    /**
     * Fetch popular data.
     *
     * Return top 4 popular games.
     *
     * @return array
     *
     * @since Method available since Release 1.0.0
     */
    public static function fetchPopular()
    {
        if (!Cache::redis()->exists(self::tableName().':popular')) {
            // if safe, use raw query, so much faster than orm
            $results = \Yii::$app->db->createCommand('
                    SELECT
                        `games`.`source_url`,
                        `games`.`title`,
                        `games`.`platform`,
                        `games`.`image_url`
                    FROM `games`
                    LEFT JOIN `threads` ON `games`.id = `threads`.`game_id` AND `threads`.`status_id` = 1
                    WHERE `games`.`status_id` = 1
                    GROUP by `games`.`id`
                    ORDER BY COUNT(`games`.`id`) DESC
                    LIMIT 4
                ')
                ->queryAll();

            if ($results) {
                Cache::setArray(self::tableName().':popular', $results);
                Cache::redis()->expire(self::tableName().':popular', Cache::ONE_HOUR);
            }
        } else {
            $results = Cache::getArray(self::tableName().':popular');
        }

        return $results;
    }
}
